<Activity mc:Ignorable="sap sap2010" x:Class="Excel" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabc="clr-namespace:UiPath.Excel.Activities.Business.ChartModifications;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="wiki_info" Type="InArgument(sd:DataTable)" />
    <x:Property Name="yt_info" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>965.6,4923.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Excel_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities.Business.ChartModifications</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Excel" sap:VirtualizedContainerService.HintSize="976,4858.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:WriteRange AddHeaders="True" DataTable="[wiki_info]" DisplayName="Wikipedijos informacijos pildymas į Excel" sap:VirtualizedContainerService.HintSize="913.6,148" sap2010:WorkflowViewState.IdRef="WriteRange_4" Password="{x:Null}" SheetName="Wikipedia informacija" StartingCell="{x:Null}" WorkbookPath="atlikejai\atlikejai.xlsx" />
    <ui:WriteRange AddHeaders="True" DataTable="[yt_info]" DisplayName="Youtube informacijos pildymas į Excel" sap:VirtualizedContainerService.HintSize="913.6,148" sap2010:WorkflowViewState.IdRef="WriteRange_3" Password="{x:Null}" SheetName="Youtube informacija" StartingCell="{x:Null}" WorkbookPath="atlikejai\atlikejai.xlsx" />
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel aplinka" sap:VirtualizedContainerService.HintSize="913.6,4473.6" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="880,4364" sap2010:WorkflowViewState.IdRef="Sequence_24">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard ReadFormatting="{x:Null}" DisplayName="Naudojamas Excel failas" EditPassword="{x:Null}" sap:VirtualizedContainerService.HintSize="817.6,4277.6" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" Password="{x:Null}" ResizeWindow="Maximize" TemplatePath="{x:Null}" WorkbookPath="atlikejai\atlikejai.xlsx">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Veiksmai, atliekami su Excel failu" sap:VirtualizedContainerService.HintSize="784,3984.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="yt_table" />
                      <Variable x:TypeArguments="x:String" Name="wiki_table" />
                      <Variable x:TypeArguments="x:String" Name="user_choice" />
                      <Variable x:TypeArguments="ue:IChartRef" Name="Grafas" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:CreateTableX DisplayName="Wikipedijos lentelės formatavimas" HasHeaders="True" sap:VirtualizedContainerService.HintSize="721.6,245.6" sap2010:WorkflowViewState.IdRef="CreateTableX_6" OutTableName="[wiki_table]" Range="[Excel.Sheet(&quot;Wikipedia informacija&quot;)]" TableName="{x:Null}" />
                    <ueab:CreateTableX DisplayName="Youtube lentelės formatavimas" HasHeaders="True" sap:VirtualizedContainerService.HintSize="721.6,245.6" sap2010:WorkflowViewState.IdRef="CreateTableX_5" OutTableName="[yt_table]" Range="[Excel.Sheet(&quot;Youtube informacija&quot;)]" TableName="{x:Null}" />
                    <ueab:ExcelForEachRowX DisplayName="Keičiamos eilučių reikšmės" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="721.6,2918.4" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[Excel.Sheet(&quot;Youtube informacija&quot;)]" SaveAfterEachRow="False">
                      <ueab:ExcelForEachRowX.Body>
                        <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="688,2693.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[CurrentRow(&quot;Prenumeratoriai&quot;).ToString.Contains(&quot;M&quot;)]" DisplayName="Ar prenumeratorių reikšmėje yra raidė M?" sap:VirtualizedContainerService.HintSize="625.6,1162.4" sap2010:WorkflowViewState.IdRef="If_6">
                              <If.Then>
                                <Sequence DisplayName="Taip" sap:VirtualizedContainerService.HintSize="496,304.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:Double" Name="numeric_value" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Priskiriama reikšmė" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Double">[numeric_value]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(CurrentRow("Prenumeratoriai").ToString.Replace("M", "")) * 1000000]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Keičiamas string į double" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_2">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ue:ExcelValue">[CurrentRow("Prenumeratoriai")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ue:ExcelValue">[Convert.ToDouble(numeric_value)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Ne" sap:VirtualizedContainerService.HintSize="592,687.2" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[CurrentRow(&quot;Prenumeratoriai&quot;).ToString.Contains(&quot;K&quot;)]" DisplayName="Ar prenumeratorių reikšmėje yra raidė K?" sap:VirtualizedContainerService.HintSize="529.6,600.8" sap2010:WorkflowViewState.IdRef="If_7">
                                    <If.Then>
                                      <Sequence DisplayName="Taip" sap:VirtualizedContainerService.HintSize="496,304.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:Double" Name="numeric_value" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Priskiriama reikšmė" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Double">[numeric_value]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(CurrentRow("Prenumeratoriai").ToString.Replace("K", "")) * 1000]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Keičiamas string į double" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_4">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ue:ExcelValue">[CurrentRow("Prenumeratoriai")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ue:ExcelValue">[Convert.ToDouble(numeric_value)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Ne" sap:VirtualizedContainerService.HintSize="416,134.4" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:Continue sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="Continue_3" />
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                            <If Condition="[CurrentRow(&quot;Patiktukų skaičius&quot;).ToString.Contains(&quot;M&quot;)]" DisplayName="Ar patiktukų skaičiaus reikšmėje yra raidė M?" sap:VirtualizedContainerService.HintSize="625.6,1444.8" sap2010:WorkflowViewState.IdRef="If_8">
                              <If.Then>
                                <Sequence DisplayName="Taip" sap:VirtualizedContainerService.HintSize="532.8,596" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:Double" Name="numeric_value" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch sap2010:Annotation.AnnotationText="Kartais nepavyksta nuskaityti patiktukų skaičiaus (ir nėra kaip nuspėti, ar taip įvyks), tad jei patiktukų skaičius buvo nuskaitytas blogai, jam yra priskiriama reikšmė 0, kad programa galėtų toliau veikti" DisplayName="Patiktukų skaičius nuskaitytas neteisingai" sap:VirtualizedContainerService.HintSize="470.4,404.8" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <Assign DisplayName="Priskiriama reikšmė" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[numeric_value]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(CurrentRow("Patiktukų skaičius").ToString.Replace("M", "")) * 1000000]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:FormatException" sap:VirtualizedContainerService.HintSize="436.8,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:FormatException">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:FormatException" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="ue:ExcelValue">[CurrentRow("Patiktukų skaičius")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="ue:ExcelValue">[0]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                    <TryCatch.Finally>
                                      <Assign DisplayName="Priskiriama reikšmė" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_10">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Double">[numeric_value]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(CurrentRow("Patiktukų skaičius").ToString.Replace("M", "")) * 1000000]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </TryCatch.Finally>
                                  </TryCatch>
                                  <Assign DisplayName="Keičiamas string į double" sap:VirtualizedContainerService.HintSize="470.4,104.8" sap2010:WorkflowViewState.IdRef="Assign_6">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ue:ExcelValue">[CurrentRow("Patiktukų skaičius")]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ue:ExcelValue">[Convert.ToDouble(numeric_value)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Ne" sap:VirtualizedContainerService.HintSize="592,687.2" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[CurrentRow(&quot;Patiktukų skaičius&quot;).ToString.Contains(&quot;K&quot;)]" DisplayName="Ar patiktukų skaičiaus reikšmėje yra raidė K?" sap:VirtualizedContainerService.HintSize="529.6,600.8" sap2010:WorkflowViewState.IdRef="If_9">
                                    <If.Then>
                                      <Sequence DisplayName="Tapi" sap:VirtualizedContainerService.HintSize="496,304.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:Double" Name="numeric_value" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Priskiriama reikšmė" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Double">[numeric_value]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(CurrentRow("Patiktukų skaičius").ToString.Replace("K", "")) * 1000]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Keičiamas string į double" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_8">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ue:ExcelValue">[CurrentRow("Patiktukų skaičius")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ue:ExcelValue">[Convert.ToDouble(numeric_value)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Ne" sap:VirtualizedContainerService.HintSize="416,134.4" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:Continue sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="Continue_4" />
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelForEachRowX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:ExcelForEachRowX>
                    <ui:InputDialog Options="{x:Null}" DisplayName="Vartotojo užklausa" sap:VirtualizedContainerService.HintSize="721.6,327.2" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Pasirinkite pagal kokį rodiklį norite sukurti grafiką" OptionsString="Peržiūros;Prenumeratoriai;Patiktukų skaičius" Title="Grafiko pasirinkimas">
                      <ui:InputDialog.Result>
                        <OutArgument x:TypeArguments="x:String">[user_choice]</OutArgument>
                      </ui:InputDialog.Result>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InputDialog>
                    <If Condition="[user_choice = &quot;Prenumeratoriai&quot;]" DisplayName="Ar vartotojas pasirinko prenumeratorius?" sap:VirtualizedContainerService.HintSize="721.6,56.8" sap2010:WorkflowViewState.IdRef="If_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Taip" sap:VirtualizedContainerService.HintSize="496,538.4" sap2010:WorkflowViewState.IdRef="Sequence_20">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:CreatePivotTableXv2 DestinationRange="[Excel.Sheet(&quot;Vartotojo grafikas&quot;)]" DisplayName="Suvestinė vartotojo užklausai" sap:VirtualizedContainerService.HintSize="433.6,452" sap2010:WorkflowViewState.IdRef="CreatePivotTableXv2_2" LayoutRowType="Compact" Range="[Excel.Sheet(&quot;Youtube informacija&quot;)]" TableName="[user_choice]" ValuesMode="Columns">
                            <ueab:CreatePivotTableXv2.Body>
                              <ActivityAction>
                                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:PivotTableFieldX DisplayName="Suvestinės laukas" FieldName="Atlikėjas" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,95.2" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_2" Type="Column" />
                                  <ueab:PivotTableFieldX DisplayName="Suvestinės laukas" FieldName="[user_choice]" Function="Max" sap:VirtualizedContainerService.HintSize="382.4,95.2" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_3" Type="Value" />
                                </Sequence>
                              </ActivityAction>
                            </ueab:CreatePivotTableXv2.Body>
                          </ueab:CreatePivotTableXv2>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Ne" sap:VirtualizedContainerService.HintSize="496,538.4" sap2010:WorkflowViewState.IdRef="Sequence_22">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:CreatePivotTableXv2 DestinationRange="[Excel.Sheet(&quot;Vartotojo grafikas&quot;)]" DisplayName="Suvestinė vartotojo užklausai" sap:VirtualizedContainerService.HintSize="433.6,452" sap2010:WorkflowViewState.IdRef="CreatePivotTableXv2_3" LayoutRowType="Compact" Range="[Excel.Sheet(&quot;Youtube informacija&quot;)]" TableName="[user_choice]" ValuesMode="Columns">
                            <ueab:CreatePivotTableXv2.Body>
                              <ActivityAction>
                                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:PivotTableFieldX DisplayName="Suvestinės laukas" FieldName="Atlikėjas" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,95.2" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_4" Type="Column" />
                                  <ueab:PivotTableFieldX DisplayName="Suvestinės laukas" FieldName="[user_choice]" Function="Sum" sap:VirtualizedContainerService.HintSize="382.4,95.2" sap2010:WorkflowViewState.IdRef="PivotTableFieldX_5" Type="Value" />
                                </Sequence>
                              </ActivityAction>
                            </ueab:CreatePivotTableXv2.Body>
                          </ueab:CreatePivotTableXv2>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ueab:InsertExcelChartX ChartCategory="Column" ChartHeight="250" ChartType="xlColumnClustered" ChartWidth="355" DisplayName="Kuriamas grafikas" sap:VirtualizedContainerService.HintSize="721.6,56.8" sap2010:WorkflowViewState.IdRef="InsertExcelChartX_2" InsertIntoSheet="[Excel.Sheet(&quot;Vartotojo grafikas&quot;)]" InsertedChart="[Grafas]" Left="0" Range="[Excel.Sheet(&quot;Vartotojo grafikas&quot;)]" Top="60">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:InsertExcelChartX>
                    <ueab:UpdateChartX Chart="[Grafas]" DisplayName="Pakeičiamas pavadinimas" sap:VirtualizedContainerService.HintSize="721.6,48" sap2010:WorkflowViewState.IdRef="UpdateChartX_1">
                      <ueab:UpdateChartX.Body>
                        <ActivityAction>
                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_23">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ueabc:ModifyChartTitleModification DisplayName="Keičiamas pavadinimas" sap:VirtualizedContainerService.HintSize="387.2,90.4" sap2010:WorkflowViewState.IdRef="ModifyChartTitleModification_1" Title="[user_choice]" />
                          </Sequence>
                        </ActivityAction>
                      </ueab:UpdateChartX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:UpdateChartX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>