<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="1180.8000000000002,2227.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="folderPath" />
      <Variable x:TypeArguments="si:FileInfo" Name="filename" />
      <Variable x:TypeArguments="x:String" Name="checkMissing">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">Yes</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:HashSet(x:Int32)" Default="[new HashSet(Of Int32)]" Name="numbers" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(Of String)]" Name="toRename" />
      <Variable x:TypeArguments="x:Int32" Name="lastNumber">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" Value="-1" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="scg:List(x:Int32)" Default="[new List(Of Int32)]" Name="missingNumbers" />
      <Variable x:TypeArguments="s:String[]" Name="files" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Aplanko pasirinkimas" sap:VirtualizedContainerService.HintSize="468.8,273.6" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Įveskite pilną aplanko adresą (path): " Title="Aplankas">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[folderPath]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <Assign DisplayName="Papildomų kabučių (jei jos yra) pašalinimas" sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[folderPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[folderPath.Replace("""","")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="Tikrinama, ar aplankas egzistuoja" sap:VirtualizedContainerService.HintSize="468.8,568.8" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,438.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Naujo aplanko kelio gavimas" sap:VirtualizedContainerService.HintSize="433.6,273.6" sap2010:WorkflowViewState.IdRef="InputDialog_4" IsPassword="False" Label="Aplankas nerastas. Įveskite pilną aplanko adresą (path): " Title="Nerastas aplankas">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[folderPath]</OutArgument>
            </ui:InputDialog.Result>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InputDialog>
          <Assign DisplayName="Papildomų kabučių (jei jos yra) pašalinimas" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[folderPath]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[folderPath.Replace("""","")]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </ui:InterruptibleWhile.Body>
      <ui:InterruptibleWhile.Condition>
        <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="Not System.IO.Directory.Exists(folderPath)" />
      </ui:InterruptibleWhile.Condition>
    </ui:InterruptibleWhile>
    <ui:InputDialog Options="{x:Null}" DisplayName="Praleistų skaičių tikrinimas (Taip/Ne)" sap:VirtualizedContainerService.HintSize="468.8,327.2" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Ar norite tikrinti numeracijoje praleistus skaičius?" OptionsString="Yes;No" Title="Praleisti skaičiai">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[checkMissing]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each item" sap:VirtualizedContainerService.HintSize="468.8,492" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[directory.GetFiles(FolderPath)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,361.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="(tik) Failo pavadinimo gavimas" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="si:FileInfo">[filename]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="si:FileInfo">[new FileInfo(item)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="string name = filename.Name.ToString(); //gauti tik failo pavadinima&#xD;&#xA;string temp = name.Length &gt;= 4 ? name.Substring(0, 4) : name; //gauti pirmus 4 pavadinimo simbolius&#xD;&#xA;var match = System.Text.RegularExpressions.Regex.Match(temp, @&quot;^\d{4}&quot;); //patikrinti, ar pirmieji simboliai yra skaiciai&#xD;&#xA;&#xD;&#xA;if (match.Success) //failas jau numeruotas&#xD;&#xA;{&#xD;&#xA;&#x9;int number =int.Parse(temp);&#xD;&#xA;&#x9;if (!numbers.Contains(number)) //tikrinama, ar numeriai nesidubliuoja&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;numbers.Add(number);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;else //failo numeris dubliuojasi&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;temp = name.Substring(5); //gaunamas failo pavadinimas be numerio&#xD;&#xA;&#x9;&#x9;System.IO.File.Move(Path.Combine(folderPath, name), Path.Combine(folderPath, temp)); //failas pervadinamas be numerio&#xD;&#xA;&#x9;&#x9;toRename.Add(temp); //irasomas i sarasa, kaip nenumeruotas failas&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;else //failas nenumeruotas&#xD;&#xA;{&#xD;&#xA;&#x9;toRename.Add(name);&#xD;&#xA;}" DisplayName="Tikrinama, ar reikia pervadinti failą" sap:VirtualizedContainerService.HintSize="433.6,188" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="si:FileInfo" x:Key="filename">
                  <VisualBasicValue x:TypeArguments="si:FileInfo" ExpressionText="filename" />
                </InArgument>
                <InOutArgument x:TypeArguments="scg:HashSet(x:Int32)" x:Key="numbers">
                  <VisualBasicReference x:TypeArguments="scg:HashSet(x:Int32)" ExpressionText="numbers" />
                </InOutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="checkMissing">
                  <VisualBasicValue x:TypeArguments="x:String" ExpressionText="checkMissing" />
                </InArgument>
                <InOutArgument x:TypeArguments="scg:List(x:String)" x:Key="toRename">
                  <VisualBasicReference x:TypeArguments="scg:List(x:String)" ExpressionText="toRename" />
                </InOutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="folderPath">
                  <VisualBasicValue x:TypeArguments="x:String" ExpressionText="folderPath" />
                </InArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Tikrinama, kurie skaičiai buvo praleisti numeracijoje (pvz.: ištrintas failas tuo numeriu)." Code="if (numbers.Count&gt;0) {lastNumber=numbers.Max();}&#xD;&#xA;&#xD;&#xA;if (checkMissing==&quot;Yes&quot;)&#xD;&#xA;{&#xD;&#xA;&#x9;for (int i=0; i&lt;lastNumber; i++)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;if (!numbers.Contains(i)) {missingNumbers.Add(i);}&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;" DisplayName="Praleistų skaičių paieška" sap:VirtualizedContainerService.HintSize="468.8,240.8" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="toRename">
          <VisualBasicValue x:TypeArguments="scg:List(x:String)" ExpressionText="toRename" />
        </InArgument>
        <InArgument x:TypeArguments="scg:HashSet(x:Int32)" x:Key="numbers">
          <VisualBasicValue x:TypeArguments="scg:HashSet(x:Int32)" ExpressionText="numbers" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="checkMissing">
          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="checkMissing" />
        </InArgument>
        <InOutArgument x:TypeArguments="scg:List(x:Int32)" x:Key="missingNumbers">
          <VisualBasicReference x:TypeArguments="scg:List(x:Int32)" ExpressionText="missingNumbers" />
        </InOutArgument>
        <InOutArgument x:TypeArguments="x:Int32" x:Key="lastNumber">
          <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="lastNumber" />
        </InOutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="lastNumber++;&#xD;&#xA;string oldName, newName, extension, name;&#xD;&#xA;int iterations = Math.Min(missingNumbers.Count, toRename.Count);&#xD;&#xA;if (checkMissing==&quot;Yes&quot;)&#xD;&#xA;{&#xD;&#xA;&#x9;for (int i=0; i&lt;iterations; i++)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;oldName = Path.Combine(folderPath, toRename[i]);&#xD;&#xA;&#x9;&#x9;name = System.IO.Path.GetFileNameWithoutExtension(toRename[i]);&#xD;&#xA;&#x9;&#x9;extension = System.IO.Path.GetExtension( toRename[i]);&#xD;&#xA;&#x9;&#x9;newName =missingNumbers[i].ToString(&quot;D4&quot;) + &quot;_&quot; +name.ToUpper().Replace(&quot; &quot;, &quot;-&quot;) + extension;&#xD;&#xA;&#x9;&#x9;newName = Path.Combine(folderPath, newName);&#xD;&#xA;&#x9;&#x9;System.IO.File.Move(oldName, newName);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;if (toRename.Count&gt;missingNumbers.Count)&#xD;&#xA;{&#xD;&#xA;&#x9;for (int i=missingNumbers.Count; i&lt;toRename.Count(); i++)&#xD;&#xA;&#x9;{&#xD;&#xA;&#x9;&#x9;oldName = Path.Combine(folderPath, toRename[i]);&#xD;&#xA;&#x9;&#x9;name = System.IO.Path.GetFileNameWithoutExtension(toRename[i]);&#xD;&#xA;&#x9;&#x9;extension = System.IO.Path.GetExtension( toRename[i]);&#xD;&#xA;&#x9;&#x9;newName =lastNumber.ToString(&quot;D4&quot;) + &quot;_&quot; + name.ToUpper().Replace(&quot; &quot;, &quot;-&quot;) +extension;&#xD;&#xA;&#x9;&#x9;newName = Path.Combine(folderPath, newName);&#xD;&#xA;&#x9;&#x9;System.IO.File.Move(oldName, newName);&#xD;&#xA;&#x9;&#x9;lastNumber++;&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;" DisplayName="Failų pervadinimas" sap:VirtualizedContainerService.HintSize="468.8,188" sap2010:WorkflowViewState.IdRef="InvokeCode_5" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="folderPath">[folderPath]</InArgument>
        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="toRename">[toRename]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="lastNumber">[lastNumber]</InArgument>
        <InArgument x:TypeArguments="scg:List(x:Int32)" x:Key="missingNumbers">[missingNumbers]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="checkMissing">[checkMissing]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>